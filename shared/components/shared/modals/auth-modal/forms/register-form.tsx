"use client"

import React from "react"
import { FormProvider, useForm } from "react-hook-form"
import { formRegisterSchema, TFormRegisterValues } from "./schemas"
import { zodResolver } from "@hookform/resolvers/zod"
import { Title } from "../../../title"
import { FormInput } from "../../../form"
import { Button } from "@/shared/components/ui"
import toast from "react-hot-toast"
import { registerUser } from "@/app/actions"

interface Props {
	onCLose?: VoidFunction
	onClickLogin?: VoidFunction
}
export const RegisterForm: React.FC<Props> = ({ onCLose }) => {
	const form = useForm<TFormRegisterValues>({
		resolver: zodResolver(formRegisterSchema),
		defaultValues: {
			email: "",
			password: "",
			confirmPassword: "",
		},
	})

	const onSubmit = async (data: TFormRegisterValues) => {
		try {
			await registerUser({
				email: data.email,
				fullName: data.fullName,
				password: data.password,
			})

			toast.success("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∞ üìù , –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–æ—á—Ç—É", {
				icon: "‚úÖ",
			})

			onCLose?.()
		} catch (error) {
			console.error(error)
			toast.error("–ù–µ–≤–µ—Ä–Ω—ã–π E-Mail –∏–ª–∏ –ø–∞—Ä–æ–ª—å", {
				icon: "‚ùå",
			})
		}
	}

	return (
		<FormProvider {...form}>
			<form className="flex flex-col gap-5" onSubmit={form.handleSubmit(onSubmit)}>
				<div className="flex justify-between items-center">
					<div className="mr-2">
						<Title text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞" size="md" className="font-bold" />
						<p className="text-gray-400">–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—é –ø–æ—á—Ç—É –∏ –ø–∞—Ä–æ–ª—å, —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è</p>
					</div>
					<img src="/assets/images/phone-login.png" alt="logo" width={60} height={60} />
				</div>

				<FormInput name="email" label="E-mail" required />
				<FormInput name="fullName" label="–í–≤–µ–¥–∏—Ç–µ –∏–º—è" required />

				<FormInput name="password" label="–ü–∞—Ä–æ–ª—å" type="password" required />
				<FormInput name="confirmPassword" label="–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å" type="password" required />

				<Button loading={form.formState.isSubmitting} className="h-12 text-base" type="submit">
					–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
				</Button>
			</form>
		</FormProvider>
	)
}
